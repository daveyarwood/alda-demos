# declarative markup syntax

## notes
piano: o4 c8 d e f g a b > c







# octaves
piano: o0 c2 > c > c > c > c > c > c > c > c > c







## accidentals
piano: o4 c4 < b- a g f+
piano: o4 g+4 f+ e+ d+ c++
piano: o4 c++++-+-+-+ # (a.k.a. E natural)







## note lengths
piano:
  o4
  c4
  c8 c
  c16 c c c
  c32 c c c c c c c
  c1







## rests
piano: r2 c | r4 c r8 c r4







## dotted notes
trombone: o2 c4.. d16 e-8 r c r







## ties
piano: o2 g+1~1







## chords
piano: o4 c1/g/>d/e
piano: o4 c1/e-/g/b
piano: o3 g1/>d/f+/a







## voices
### done via chords with different note lengths
piano: o4 c1/e/g/>c4 < b a g | < g+1/b/>e

### done via voices
piano:
  V1: o5 c4 < b a g | e1
  V2: o4 c1/e/g | < g+/b







## multiple instruments playing simultaneously
(quant! 95)
violin "vn1": o4 a2 > c < b1~4
violin "vn2": o4 d2   d   d1~4
viola:        o3 f+2  a   g1~4
cello:        o3 d2 < d   g1~4


trumpet  "tpt": o4 c8 d e f g a b > c4.
trombone "tbn": o3 e8 f g a b > c d e4.







## attributes
### per-instrument attributes
trumpet "tpt2":
  (tempo 200) # only applies to trumpet
  o4 c8 d e f g a b > c4.
trombone "tbn2":
  o3 e8 f g a b > c d e4.







### global attributes
trumpet "tpt3":
  (tempo! 200) # applies to all instruments
  o4 c8 d e f g a b > c4.
trombone "tbn3":
  o3 e8 f g a b > c d e4.







# markers
trumpet "tpt4":
  (tempo! 120)
  o4 c8 d e f g a b > %last-note c4.~2
trombone "tbn4":
  o3 e8 f g a b > c d e4.~2
tuba "tba4":
  @last-note o2 c4.~2







## inline clojure code

### this...
piano: o4 c1/g/>d/e

### ...is equivalent to this:
(part "piano"
  (octave 4)
  (chord
    (note (pitch :c))
    (note (pitch :g))
    (octave :up)
    (note (pitch :d))
    (note (pitch :e))))


### the `note` function:
(note (pitch :c))
(note (pitch :c) (duration (note-length 4)))

### oh look, bongos
midi-percussion: o4 c8 c+ d d+ e

### a function that generates random bongo patterns
(defn random-bongos
  [ticks vol-min vol-max]
  [(octave 4)
   (set-note-length 16) ; 16th notes
   (let [notes     (-> #{[:c] [:c :sharp] [:d] [:d :sharp] [:e]}
                       (->> (map #(note (apply pitch %))))
                       (conj (pause)))
         rand-note #(rand-nth notes)
         rand-vol  #(vol (+ vol-min (rand-int (- vol-max vol-min))))
         tick      #(vector (rand-vol) (rand-note))]
     (take ticks (repeatedly tick)))])

midi-percussion:
  # bongos
  V1: (random-bongos (* 8 4 4) 25 75)
  # hi-hat to keep time
  V2: o2 (vol 50) [ g+4 g+ g+ g+ ] *8 %end
  @end o5 (vol 80) a1 # ding

